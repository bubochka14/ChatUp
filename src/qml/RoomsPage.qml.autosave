import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import QtQuick.Controls.Material
import ChatClient
import QuickFuture
import ObjectConverter
RowLayout {
    id: root
    spacing: 0
    required property RoomController roomController
    required property MessageController messageController
    required property UserController userController
    property bool roomSelected: false
    RoomList {
        id: roomList
        // Layout.minimumWidth: 120
        Layout.fillHeight: true
        Layout.preferredWidth: Math.max(220, parent.width / 4)
        Layout.maximumWidth: 420
        Component.onCompleted: syncronizeRooms()
        roomModel: roomController.userGroups
        onSelectedRoomIDChanged: {
            if (!roomSelected)
                roomSelected = true
            chatBox.setRoomId(roomList.selectedRoomID)
            roomHeader.title = roomList.roomModel.data(
                        roomModel.idToIndex(roomList.selectedRoomID),
                        RoomModel.NameRole)
        }
        listView.footer: StandardDelegate {
            id: createRoomFooter
            label.text:  qsTr("Create")
            icon: Rectangle {
                height: 50
                width: 50
                radius: 20
                color: "#19182a"
                Label {
                    text: "+"
                    color: "white"
                    font.pixelSize: 40
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.bottom: parent.bottom
                    anchors.bottomMargin: 3
                }
            }
            width: roomList.listView.width
            onClicked: createRoomDialog.open()
        }
    }
    ColumnLayout {
        id: chatColumn
        spacing: 0
        Layout.fillWidth: true
        // Layout.minimumWidth: 350
        ColoredFrame {
            id: roomHeader
            property alias title: titleLabel.text
            visible: roomSelected
            implicitHeight: 50
            Layout.fillWidth: true
            Label {
                anchors.centerIn: parent
                font.bold: true
                id: titleLabel
            }
            MouseArea {
                id: addUserBtn
                height: 30
                width: 30
                anchors.verticalCenter: parent.verticalCenter
                anchors.right: parent.right
                anchors.rightMargin: 15
                cursorShape: Qt.PointingHandCursor
                onClicked: selectUserDialog.open()
                Image {
                    id: addUserIcon
                    anchors.centerIn: parent
                    height: 25
                    width: 25
                    mipmap: true
                    source: Qt.resolvedUrl("pics/add-user.svg")
                }
            }
        }

        ChatBox {
            id: chatBox
            focus: true
            initalMessage: qsTr("Select ChatRoom to start messaging")
            messageController: root.messageController
            userController: root.userController
            Layout.fillHeight: true
            Layout.fillWidth: true
        }
        RoundedFrame
        {
            id: usersList
            UsersView{
                anchors.fill: parent
                
            }
        }
    }
    CreateRoomDialog {
        id: createRoomDialog
        anchors.centerIn: parent
        onAccepted: roomController.createGroup(roomName)
    }
    SelectUserDialog {
        id: selectUserDialog
        anchors.centerIn: parent
        title: qsTr("Add memder:")
        onSeacrhPatternChanged: {
            Future.onFinished(userController.getUsers(ObjectConverter.toHash({
                                                          "name": seacrhPattern
                                                      }), 5), function (users) {
                                                          selectUserDialog.usersModel = users
                                                      })
        }
        onUserSelected: id=>  roomController.addUserToRoom(id, roomList.selectedRoomID)
    }
}
